package service;

import java.util.Date;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class Appointment {
	
	private int id;
	private Customer customer;
	private BigDecimal totalValue;
	private Date date;
	private String description;
	
	// an appointment can include multiple services
	// use a list to track them and calculate the total price
	private List<Service> services = new ArrayList<Service>();
	
	// CONSTRUCTOR'S
	public Appointment (int id, Customer customer, Date date)
	{
		this.id = id;
		this.setCustomer(customer);
		this.setDate(date);
		
		this.totalValue = new BigDecimal(0.0);
	}
	
	public Appointment (int id, Customer customer, Date date, String description)
	{
		this.id = id;
		this.setCustomer(customer);
		this.setDate(date);
		this.setDescription(description);
		
		this.totalValue = new BigDecimal(0.0);
	}
	
	// GETTER'S AND SETTER'S
	// -> still don't know if it's necessary to create getters and setters for the id attribute
	public Customer getCustomer() {
		return customer;
	}
	public void setCustomer(Customer customer) {
		this.customer = customer;
	}
	
	
	public List<Service> getService() {
		return services;
	}
	public void setService(List<Service> services) {
		this.services = services;
	}
	
	
	public BigDecimal getTotalValue() {
		return totalValue;
	}
	public void setTotalValue(BigDecimal totalValue) {
		this.totalValue = totalValue;
	}
	
	
	public Date getDate() {
		return date;
	}
	public void setDate(Date date) {
		this.date = date;
	}

	
	public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}
	
	// METHOD'S
	// for managing services in an appointment
	// since 'services' is a list, we can add or remove services dynamically
	public void addService(Service service) {
		this.services.add(service);
		this.totalValue = this.totalValue.add(service.getPrice());
	}
	
	public void deleteService(Service service) {
		this.services.remove(service);
		this.totalValue = this.totalValue.subtract(service.getPrice());
	}

	@Override
	public String toString() {
		return "Appointment [id=" + id + ", customer=" + customer + ", totalValue=" + totalValue + ", date=" + date
				+ ", description=" + description + ", services=" + services + "]";
	}
}