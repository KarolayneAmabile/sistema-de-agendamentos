package view;

import models.Appointment;
import models.Salon;
import models.SalonEvent;
import models.Service;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import exceptions.StrException;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;

import models.Salon;
import models.SalonListener;

public class Planner extends Frame implements SalonListener {
	
	// para que o controle ouça o que acontecer aqui
	// no caso, os cliques nos botões
	private ActionListener controller;
	
	// as informações do modelo
	private static Salon salon;
	// a tela em si
	private static JFrame frame;
	// a tabela 
	private static JTable table;
	
	public static void main(String[] str) {
		createWindow();
	}
	
	//JButton newAppointment = new JButton("NOVO AGENDAMENTO");
	//JButton newService = new JButton("CADASTRAR SERVIÇO");
	@Override
	public void updateAppointment(SalonEvent event) {
		
		newAppointment.addActionListener
	}

	@Override
	public void updateService(SalonEvent event) {
		// TODO Auto-generated method stub
		
	}
	
	// tela principal
	public static void createWindow() {
		frame = new JFrame("Sistema de Agendamentos");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(800, 500);
		frame.setLayout(new BorderLayout(10, 10));
		
		// painel
		// borderlayout é tipo um template pre pronto de divisao, dai
		// dispensa settar tudo em (x, y)
		// criamos paineis e atribuimos paineis a algum canto 
		JPanel topPanel = new JPanel(new BorderLayout());
		JLabel name = new JLabel("Sistema de Agendamentos");
		name.setFont(new Font("Arial", Font.BOLD, 20));
		topPanel.add(name, BorderLayout.CENTER);
		
		// os botoes tambem vao ficar no painel de cima
		JPanel buttonPanel = new JPanel();
		JButton newAppointment = new JButton("NOVO AGENDAMENTO");
		JButton newService = new JButton("CADASTRAR SERVIÇO");
		// implementar a logica de quando os botoes sao apertados no controoller
		
		buttonPanel.add(newAppointment);
		buttonPanel.add(newService);
		topPanel.add(buttonPanel, BorderLayout.EAST);
		
		frame.add(topPanel, BorderLayout.NORTH);
		// Sistema de Agendamentos 			|NOVO AGENDAMENTO| |CADASTRAR SERVIÇO|
		
		// tabela agora
		String[] columms = {"HORÁRIOS", "CLIENTE", "SERVIÇO", "PREÇO FINAL"};
		// é pra transnformar o hashmap em uma lista
		List<Appointment> appointments = salon.getAppointments().values().stream().flatMap(List::stream).toList();
		
		Object[][] rows = new Object[appointments.size()][5];
		for (int i = 0; i < appointments.size(); i++) {
			Appointment appointment = appointments.get(i);
			rows[i][0] = appointment.getDate().toString();
			rows[i][2] = appointment.getCustomer();
			rows[i][3] = appointment.getService().getServiceName();
			rows[i][4] = "R$ " + appointment.getTotalValue().toString();
		}
		
		DefaultTableModel model = new DefaultTableModel(rows, columms);
		table = new JTable(model);
		JScrollPane scrollPane = new JScrollPane(table);
		frame.add(scrollPane, BorderLayout.CENTER);
		
		// so o painel inferior agora
		JPanel bottomPanel = new JPanel(new BorderLayout());
		JLabel totalLabel = new JLabel("TOTAL DO DIA", SwingConstants.LEFT);
		totalLabel.setFont(new Font("Arial", Font.BOLD, 12));
		bottomPanel.add(totalLabel, BorderLayout.WEST);
		
		JLabel totalValue = new JLabel("R$ " + salon.getTotal().toString(), SwingConstants.RIGHT);
		totalValue.setFont(new Font("Arial", Font.BOLD, 12));
		bottomPanel.add(totalValue, BorderLayout.EAST);
		
		frame.add(bottomPanel, BorderLayout.SOUTH);
		frame.setVisible(true);
	}
	
	// tela de formulario de agendamento
	public static void openAppointmentForm() {
		JPanel appointmentPanel = new JPanel();
		appointmentPanel.setLayout(new GridLayout(5, 2));
		
		JTextField clientName = new JTextField();
		JTextField timeAndDate = new JTextField();
		JComboBox<Service> serviceComboBox = new JComboBox<>(salon.getServices().toArray(new Service[0]));
		
		appointmentPanel.add(new JLabel("Nome do cliente: "));
		appointmentPanel.add(clientName);
		appointmentPanel.add(new JLabel("Data e hora: "));
		appointmentPanel.add(timeAndDate);
		appointmentPanel.add(new JLabel("Serviço: "));
		appointmentPanel.add(serviceComboBox);
		
		int option = JOptionPane.showConfirmDialog(frame, appointmentPanel, "Novo Agendamento", JOptionPane.OK_CANCEL_OPTION);
		if (option == JOptionPane.OK_OPTION) {
		    String clientNameText = clientName.getText();
		    String dateTimeText = timeAndDate.getText();

		    if (dateTimeText == null || dateTimeText.isEmpty()) {
		        JOptionPane.showMessageDialog(frame, "Por favor, insira uma data e hora válidas.");
		        return;
		    }

		    // Converter a data e hora para o formato adequado
		    // Supondo que a data seja no formato "yyyy-MM-dd" e hora "HH:mm"
		    LocalDate date = LocalDate.parse(dateTimeText.split(" ")[0]); // Para data
		    LocalTime time = LocalTime.parse(dateTimeText.split(" ")[1]); // Para hora

		    // Criar o agendamento
		    Appointment newAppointment = new Appointment(
		            1, // O ID do agendamento, que poderia ser gerado dinamicamente
		            clientNameText,
		            date,
		            time,
		            (Service) serviceComboBox.getSelectedItem() // Selecionando o serviço
		    );
		    salon.addAppointment(newAppointment);

		    JOptionPane.showMessageDialog(frame, "Agendamento criado com sucesso");

		    // Recarregar a janela
		    frame.dispose();
		    createWindow();
		}
	}
	public static void openServiceForm() {
		JPanel servicePanel = new JPanel();
		servicePanel.setLayout(new GridLayout(3, 2));
		
		JTextField serviceName = new JTextField();
		JTextField price = new JTextField();
		
		servicePanel.add(new JLabel("Nome do serviço: "));
		servicePanel.add(serviceName);
		servicePanel.add(new JLabel("Preço do serviço: "));
		servicePanel.add(price);
		
		int option = JOptionPane.showConfirmDialog(frame, servicePanel, "Novo serviço", JOptionPane.OK_CANCEL_OPTION);
		if (option == JOptionPane.OK_OPTION) {
			Service newService;
			try {
				newService = new Service(
							1,
							serviceName.getText(),
							new BigDecimal(price.getText())
						);
			} catch (StrException e) {
				JOptionPane.showMessageDialog(frame, "Insira um nome válido");
		        return;
			}
			
		salon.addService(newService);
		JOptionPane.showMessageDialog(frame, "Serviço cadastrado com sucesso.");
		frame.dispose();
		createWindow();
		}
	}
}

