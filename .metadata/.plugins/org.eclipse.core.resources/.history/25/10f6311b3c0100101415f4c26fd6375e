package models;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeParseException;

import exceptions.StrException;

public class Appointment {
	
	private int id;
	private String customer;
	private BigDecimal totalValue = BigDecimal.ZERO;
	private LocalDate date; 
	private LocalTime time; 
	private Service service;
	
	public Appointment (int id, String customer, String date, String time, Service service) throws StrException {
		this.id = id;
		this.setCustomer(customer);
		this.setDate(date);
		this.setTime(time);
		this.setService(service);
		this.totalValue = service.getPrice();
	}
	
	public String getCustomer() {
		return customer;
	}
	public void setCustomer(String customer) {
		this.customer = customer;
	}
	
	public Service getService() {
		return service;
	}
	public void setService(Service service) {
		this.service = service;
		this.totalValue = service.getPrice();
	}
	
	public BigDecimal getTotalValue() {
		return totalValue;
	}

	public LocalDate getDate() {
		return date;
	}
	
    public void setDate(String dateString) throws StrException {
        try {
            LocalDate parsedDate = LocalDate.parse(dateString);
            this.date = parsedDate;
        } catch (DateTimeParseException e) {
            throw new StrException("Data inválida. O formato correto é yyyy-MM-dd.");
        }
    }

	public LocalTime getTime() {
		return time;
	}
	public void setTime(String timeString) throws StrException {
        try {
            LocalTime parsedTime = LocalTime.parse(timeString);
            this.time = parsedTime;
        } catch (DateTimeParseException e) {
            throw new StrException("Hora inválida. O formato correto é HH:mm.");
        }
    }
}
