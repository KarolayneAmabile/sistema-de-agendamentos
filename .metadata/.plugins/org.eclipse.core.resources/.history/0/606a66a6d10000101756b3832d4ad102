package models;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

public class Salon {

    private Map<LocalDate, List<Appointment>> appointments;
    private List<SalonListener> listerners;
    private List<Service> services;
    private BigDecimal total = BigDecimal.ZERO;
    
    public Salon() {
    	appointments = new HashMap<>();
    	services = new ArrayList<>();
    	listerners = new LinkedList<>();
    }
    
    public synchronized void addSalonListener(SalonListener listener) {
    	if(listerners.contains(listener)) {
    		return;
    	}
    	this.listerners.add(listener);
    }
    
    public void notifyListeners(Appointment appointment) {
    	for(SalonListener listeners : this.listerners) {
    		listeners.update(new SalonEvent(this, appointment));
    	}
    }
    
    public void addAppointment(Appointment appointment) {
    	LocalDate date = appointment.getDate();

    	if (!appointments.containsKey(date)) {
    		appointments.put(date, new ArrayList<>());
        }
        appointments.get(date).add(appointment);
        this.total = this.total.add(appointment.getTotalValue());
        this.notifyListeners(appointment);
    }
    
    public void addService(Service service) {
    	services.add(service);
    }
    
    public Map<LocalDate, List<Appointment>> getAppointments() {
    	return appointments;
    }
    
    
    public Service getService(String serviceName) {
    	for (Service service : services) {
    		if(service.getServiceName().equals(serviceName)) {
    			return service;
    		}
    	}
    	return null;
    }
    
    public BigDecimal getTotal() {
    	return this.total;
    }
}
